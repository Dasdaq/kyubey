@model OTC
<script src="~/js/eos.js"></script>
<script src="~/js/kyubey.js"></script>

<header class="brand-header masthead text-center text-white"></header>

<section>
    <div class="container brand">
        <img src="/otc/@Model.Id/icon" class="brand-icon" />
        <div class="brand-name">@Model.Id</div>
    </div>
</section>

<section class="brand-menu">
    <div class="container">
        <a class="brand-menu-item" asp-action="Index">About</a>
        <a class="brand-menu-item active" asp-action="Buy">Buy</a>
        <a class="brand-menu-item" asp-action="Sell">Sell</a>
        <a class="brand-menu-item" asp-action="Publish">Publish</a>
    </div>
</section>

<section>
    <div class="container">
        <div class="row">
            <div class="col-md-4">
                @if (!string.IsNullOrWhiteSpace(Model.Alert))
                {
                    <div class="card alert">
                        @Model.Alert
                    </div>
                }
                <div class="card links">
                    @if (!string.IsNullOrWhiteSpace(Model.WebUrl))
                    {
                        <div><i class="fa fa-home"></i> <a href="@Model.WebUrl">@Model.WebUrl.Replace("http://", "").Replace("https://", "")</a></div>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.GitHub))
                    {
                        <div><i class="fa fa-github"></i> <a href="@Model.GitHub">@Model.GitHub.Replace("http://", "").Replace("https://", "")</a></div>
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Email))
                    {
                        <div><i class="fa fa-envelope-o "></i> @Model.Email </div>
                    }
                </div>
                <div class="card">
                    <div class="brand-current-label">Current</div>
                    <div class="brand-current-text-sm">Min: @Model.PriceMin.ToString("0.0000") EOS</div>
                    <div class="brand-current-text-sm">Max: @Model.PriceMax.ToString("0.0000") EOS</div>
                </div>
            </div>
            <div class="col-md-8">
                <div class="card">
                    <div class="row filter">
                        <div class="col-md-4">
                            <input id="min" class="form-control" placeholder="最小单价，如0.0000" />
                        </div>
                        <div class="col-md-2">
                            EOS
                        </div>
                        <div class="col-md-4">
                            <input id="max" class="form-control" placeholder="最大单价，如10.0000" />
                        </div>
                        <div class="col-md-2">
                            EOS
                        </div>
                    </div>
                </div>
                <div class="card no-padding">
                    <table class="currency-table">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>出售者</th>
                                <th>@(Model.Id)</th>
                                <th>售价</th>
                                <th>单价</th>
                                <th>出售时间</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody id="lstTransactions"></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</section>

<div class="modal fade" id="modal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="modalContent"></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<script>
    Date.prototype.Format = function (fmt) { //author: meizz
        var o = {
            "M+": this.getMonth() + 1, //月份
            "d+": this.getDate(), //日
            "h+": this.getHours(), //小时
            "m+": this.getMinutes(), //分
            "s+": this.getSeconds(), //秒
            "q+": Math.floor((this.getMonth() + 3) / 3), //季度
            "S": this.getMilliseconds() //毫秒
        };
        if (/(y+)/.test(fmt)) fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));
        for (var k in o)
            if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));
        return fmt;
    }

    function unit_price(token, eos) {
        return (parseFloat(eos.split(' ')[0]) / parseFloat(token.split(' ')[0])).toFixed(4) + " EOS";
    }

    function PollTransactions() {
        $.getJSON('/otc/@Model.Id/buy-data', { min: $('#min').val(), max: $('#max').val() }, function (data) {
            var html = '';
            for (var i = 0; i < data.length; i++) {
                html += `<tr id='tx-${data[i].id}'><td class='tx-id'>${data[i].id}</td><td>${data[i].owner}</td><td class='tx-bid'>${data[i].bid.quantity}</td><td class='tx-ask'>${data[i].ask.quantity}</td><td>${unit_price(data[i].bid.quantity, data[i].ask.quantity)}</td><td>${(new Date(data[i].timestamp * 1000)).Format('yyyy-MM-dd hh:mm')}</td><td><a href="javascript:${account && data[i].owner === account.name ? 'cancel' : 'take'}(${data[i].id})">${account && data[i].owner === account.name ? 'Cancel' : 'Take' }</a></td></tr>`;
            }
            $('#lstTransactions').html(html);
        });
    }
    
    $('#min').keyup(PollTransactions);
    $('#max').keyup(PollTransactions);

    setTimeout(PollTransactions, 1000);
    setTimeout(PollTransactions, 2000);
    setTimeout(PollTransactions, 3000);
    setInterval(PollTransactions, 5000);

    function take(id) {
        var bid = $('#tx-' + id).find('.tx-bid').text();
        var ask = $('#tx-' + id).find('.tx-ask').text();
        var memo = `take,${bid},@Model.Contract,${id}`;
        eos.contract('eosio.token', { requiredFields })
            .then(contract => {
                return contract.transfer(
                    account.name,
                    'eosotcbackup',
                    ask,
                    memo,
                    {
                        authorization: [`${account.name}@@${account.authority}`]
                    });
            })
            .then(() => {
                showModal('交易成功', '请在您的钱包中确认本次交易，如有任何问题请与我们的客服联系！');
            })
            .catch(err => {
                showModal('交易失败', error.message + '如有任何问题请与我们的客服联系！');
            });
    }

    function cancel(id) {
        var bid = $('#tx-' + id).find('.tx-bid').text();
        var ask = $('#tx-' + id).find('.tx-ask').text();
        var memo = `${ask}@@eosio.token`;
        eos.contract('eosotcbackup', { requiredFields })
            .then(contract => {
                return contract.retrieve(
                    account.name,
                    id,
                    memo,
                    {
                        authorization: [`${account.name}@@${account.authority}`]
                    });
            })
            .then(() => {
                showModal('取消成功', '请在您的钱包中确认本次交易，如有任何问题请与我们的客服联系！');
            })
            .catch(err => {
                showModal('取消失败', error.message + '如有任何问题请与我们的客服联系！');
            });
    }
</script>