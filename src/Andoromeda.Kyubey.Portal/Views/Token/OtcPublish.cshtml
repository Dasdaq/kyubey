@model Token
@{
    ViewBag.Current = "token-publish";
    ViewBag.Title = Model.Id + " - " + SR["Publish"];
}
@await Html.PartialAsync("_TokenHeader")
<script src="~/js/kyubey.js"></script>

<section>
    <div class="container">
        <div class="row">
            @await Html.PartialAsync("_TokenSidebar")
            <div class="col-md-4">
                <div class="card">
                    <h5>@SR["I want to buy {0}", Model.Id]</h5>
                    <table style="margin-bottom: 15px">
                        <tr>
                            <td><input type="text" id="txtBuyAmount" value="0.0000" class="form-control" /></td>
                            <td>@Model.Id</td>
                        </tr>
                        <tr>
                            <td colspan="2">@SR["Cost EOS (Total)"]</td>
                        </tr>
                        <tr>
                            <td><input type="text" id="txtBuyEos" value="0.0000" class="form-control" /></td>
                            <td>EOS</td>
                        </tr>
                    </table>
                    <input type="button" class="btn btn-primary" value="@SR["Publish Buy Order {0}", Model.Id]" onclick="otc_buy()" />
                </div>
            </div>
            <div class="col-md-4">
                <div class="card">
                    <h5>@SR["I want to sell {0}", Model.Id]</h5>
                    <table style="        margin-bottom: 15px">
                        <tr>
                            <td><input type="text" id="txtSellAmount" value="0.0000" class="form-control" /></td>
                            <td>@Model.Id</td>
                        </tr>
                        <tr>
                            <td colspan="2">@SR["Price EOS (Total)"]</td>
                        </tr>
                        <tr>
                            <td><input type="text" id="txtSellEos" value="0.0000" class="form-control" /></td>
                            <td>EOS</td>
                        </tr>
                    </table>
                    <input type="button" class="btn btn-primary" value="@SR["Publish Sell Order {0}", Model.Id]" onclick="otc_sell()" />
                </div>
            </div>
        </div>
    </div>
</section>

<div class="modal fade" id="modal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="modalContent"></div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<script>
    function otc_buy() {
        eos.contract('eosio.token', { requiredFields })
            .then(contract => {
                var memo = `ask,${parseFloat($('#txtBuyAmount').val()).toFixed(4)} @Model.Id,@Model.Contract`;
                return contract.transfer(
                    account.name,
                    'eosotcbackup',
                    parseFloat($('#txtBuyEos').val()).toFixed(4) + ' EOS',
                    memo,
                    {
                        authorization: [`${account.name}@@${account.authority}`]
                    });
            })
            .then(() => {
                showModal('交易成功', '请在您的钱包中确认本次交易，如有任何问题请与我们的客服联系！');
            })
            .catch(err => {
                showModal('交易失败', error.message + '如有任何问题请与我们的客服联系！');
            });
    }


    function otc_sell() {
        eos.contract('@Model.Contract', { requiredFields })
            .then(contract => {
                var memo = `ask,${parseFloat($('#txtSellEos').val()).toFixed(4)} EOS,eosio.token`;
                return contract.transfer(
                    account.name,
                    'eosotcbackup',
                    parseFloat($('#txtSellAmount').val()).toFixed(4) + ' @Model.Id',
                    memo,
                    {
                        authorization: [`${account.name}@@${account.authority}`]
                    });
            })
            .then(() => {
                showModal('交易成功', '请在您的钱包中确认本次交易，如有任何问题请与我们的客服联系！');
            })
            .catch(err => {
                showModal('交易失败', error.message + '如有任何问题请与我们的客服联系！');
            });
    }
</script>